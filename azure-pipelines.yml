pr:
  - master

# There's a separate pipeline for CI which also uses this file, but with a trigger override in the UI
# https://dev.azure.com/uifabric/fabricpublic/_apps/hub/ms.vss-ciworkflow.build-ci-hub?_a=edit-build-definition&id=164&view=Tab_Triggers
trigger: none

variables:
  - ${{ if not(startsWith(variables['Build.SourceBranch'], 'refs/heads/')) }}:
      - name: sinceArg
        value: --since $(targetBranch)

  - group: fabric-variables

  - template: .devops/templates/variables.yml

pool: '1ES-Host-Ubuntu'

jobs:
  - job: BuildTestLint
    workspace:
      clean: all
    steps:
      - template: .devops/templates/tools.yml

      - bash: |
          postPolicy="true";
          response=$(curl --request POST 'https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/oauth2/token' --header 'Content-Type: application/x-www-form-urlencoded' --data-urlencode 'grant_type=client_credentials' --data-urlencode 'client_id=288a69b6-760d-4c1f-ad6d-0183b5e5740f' --data-urlencode 'client_secret='${VR_APPROVAL_CLIENT_SECRET} )
            parsedResponse=${response/*"access_token"/}
            token=${parsedResponse:3:${#parsedResponse}-5}
            curl --location --request POST 'https://vrt-fluentapp.azurewebsites.net/api/policyState' \
            --header 'Authorization: Bearer '"$token" \
            --header 'Content-Type: application/json' \
            --data-raw '	{
            "organization": "uifabric",
            "projectName": "fabricpublic",
            "prId": $(System.PullRequest.PullRequestNumber),
            "commitId": "$(Build.SourceVersion)",
              "generate":true,
              "blockingPipeline":{
              },
              "nonBlockingPipeline":{
                "202": {
                  "pipelineStatus": "PENDING",
                  "pipelineName": "fluent-ui VRT Pipeline"
                }
              },
              "postPolicy": '${postPolicy}',
              "policyType": "OPTIONAL"
            }'
        displayName: 'Call policy State Api'
        env:
          VR_APPROVAL_CLIENT_SECRET: $(VR-APPROVAL-CLIENT-SECRET)

      - task: Bash@3
        inputs:
          filePath: yarn-ci.sh
        displayName: yarn (install packages)

      - script: |
          yarn nx workspace-lint
          yarn nx run @fluentui/nx-workspace-tools:check-graph
        displayName: NX workspace lint

      - script: |
          yarn check:installed-dependencies-versions
        displayName: 'check packages: installed dependencies versions'

      - script: |
          if [[ -n "$(targetBranch)" ]]; then
            yarn format --since $(targetBranch) --check
          else
            yarn format --all --check
          fi
        displayName: check formatting

      ## Danger.js checks for Fluent UI N*
      - script: |
          yarn danger ci
        displayName: danger
        condition: eq(variables.isPR, true)
        env:
          DANGER_GITHUB_API_TOKEN: $(DANGER_GITHUB_API_TOKEN)

      - script: |
          yarn buildci  $(sinceArg)
        displayName: build, test, lint

      - template: .devops/templates/cleanup.yml

  - job: DeployE2E
    displayName: Deploy and E2E
    workspace:
      clean: all
    steps:
      - template: .devops/templates/tools.yml

      - task: Bash@3
        inputs:
          filePath: yarn-ci.sh
        displayName: yarn

      # this also builds FUI N* docs if appropriate
      - script: |
          yarn bundle  $(sinceArg)
        displayName: bundle

      - script: |
          yarn lage build-storybook  --verbose $(sinceArg)
        displayName: build Storybooks

      ## This runs regardless of scope, the app will adapt to the scope as well
      - script: |
          yarn workspace @fluentui/pr-deploy-site generate:site
        displayName: generate PR Deploy Site

      - task: AzureUpload@2
        displayName: Upload PR deploy site
        inputs:
          azureSubscription: $(azureSubscription)
          BlobPrefix: $(deployBasePath)
          ContainerName: '$web'
          SourcePath: 'apps/pr-deploy-site/dist'
          storage: $(azureStorage)

      - task: GithubPRStatus@0
        displayName: 'Update PR deploy site github status'
        inputs:
          githubOwner: microsoft
          githubRepo: fluentui
          githubContext: 'Pull request demo site'
          githubDescription: 'Click "Details" to go to the deployed demo site for this pull request'
          # This MUST have a trailing slash, or the links to PR deploy site assets won't work
          githubTargetLink: $(deployUrl)/

      - script: |
          yarn e2e $(sinceArg)
        displayName: Cypress E2E tests

      - powershell: |
          $url = "https://dev.azure.com/uifabric/fabricpublic/_apis/build/builds?definitions=203&statusFilter=completed&resultFilter=succeeded&queryOrder=finishTimeDescending&`$top=1"
          Write-Host "Looking up latest official build via url: $url"
          $pipelineBuildInfo = Invoke-RestMethod -Uri $url -Headers @{Authorization = "Bearer $env:SYSTEM_ACCESSTOKEN"}
          Write-Host "Response: $pipelineBuildInfo"
          [int]$latestBuildId = $pipelineBuildInfo.value.id
          Write-Host "Setting variable LatestBuildId=$latestBuildId"
          Write-Host "##vso[task.setvariable variable=LatestBuildId]$latestBuildId"
        name: GetLatestGreenCIBuild
        env:
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)

      - bash: cd packages/screenshotdiff && yarn build
        displayName: 'Build'

      - bash: node packages/screenshotdiff/lib/index.js pr --clientType "fluentui" --buildId $(Build.BuildId) --lkgCIBuild 271302
        displayName: 'Run fluentui-screenshotdiff'
        env:
          API_URL: $(System.CollectionUri)
          API_TOKEN: $(TEST_PAT)
          API_REPOSITORY: $(Build.Repository.Name)
          API_PROJECT: $(System.TeamProject)
          GITHUB_API_TOKEN: $(GITHUB_TEST_PAT)
          STORAGE_ACCOUNT_FLUENTUI: $(STORAGE-ACCOUNT-FLUENTUI)
          STORAGE_KEY_FLUENTUI: $(STORAGE-KEY-BLOB-FLUENTUI)
          BLOB_CONNECTION_STRING: $(BLOB-CONNECTION-STRING)
          VR_APPROVAL_CLIENT_SECRET: $(VR-APPROVAL-CLIENT-SECRET)

      - template: .devops/templates/cleanup.yml
