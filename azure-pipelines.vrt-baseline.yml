# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
      - master

variables:
  skipComponentGovernanceDetection: true

pool: '1ES-Host-Ubuntu'

jobs:
  - job: VRToolUpdateBaseline_V9
    workspace:
      clean: all
    steps:
      - template: .devops/templates/tools.yml

      - task: Bash@3
        inputs:
          filePath: yarn-ci.sh
        displayName: yarn (install packages)

      - script: |
          yarn workspace @fluentui/vr-tests-react-components convert
        displayName: Convert screener component to storywright

      - script: |
          yarn build --to @fluentui/react-storybook-addon
        displayName: Build react-storybook-addon

      - script: |
          yarn workspace @fluentui/vr-tests-react-components screener:build
        displayName: Build VR tests components package

      - script: |
          yarn workspace @fluentui/vr-tests-react-components test:component --verbose
        displayName: 'Run VR tests'

      - script: |
          mkdir -p screenshots
          cp -rf apps/vr-tests-react-components/dist/screenshots/*.png screenshots/
        displayName: Collate Artifacts

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: 'screenshots'
          ArtifactName: 'vrscreenshotv9'
          publishLocation: 'Container'

      # - bash: cd packages/screenshotdiff && yarn build
      #   displayName: 'Build'

      - bash: node node_modules/vrscreenshotdiff/lib/index.js release --clientType "fluentuiv9" --buildId $(Build.BuildId)
        displayName: 'Run Screenshotdiff update baseline'
        env:
          API_URL: $(System.CollectionUri)
          API_TOKEN: $(TEST_PAT)
          API_REPOSITORY: $(Build.Repository.Name)
          API_PROJECT: $(System.TeamProject)
          GITHUB_API_TOKEN: $(GITHUB_TEST_PAT)
          STORAGE_ACCOUNT_FLUENTUI: $(STORAGE-ACCOUNT-FLUENTUI)
          STORAGE_KEY_FLUENTUI: $(STORAGE-KEY-BLOB-FLUENTUI)
          BLOB_CONNECTION_STRING: $(BLOB-CONNECTION-STRING)
          VR_APPROVAL_CLIENT_SECRET: $(VR-APPROVAL-CLIENT-SECRET)

  - job: VRToolUpdateBaseline_V8
    workspace:
      clean: all
    steps:
      - template: .devops/templates/tools.yml

      - task: Bash@3
        inputs:
          filePath: yarn-ci.sh
        displayName: yarn (install packages)

      - script: |
          yarn workspace @fluentui/vr-tests convert
        displayName: Convert screener component to storywright

      - script: |
          yarn workspace @fluentui/vr-tests screener:build
        displayName: Build VR tests components package

      - script: |
          yarn workspace @fluentui/vr-tests test:component --verbose
        displayName: 'Run VR tests'

      - script: |
          mkdir -p screenshots
          cp -rf apps/vr-tests/dist/screenshots/*.png screenshots/
        displayName: Collate Artifacts

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: 'screenshots'
          ArtifactName: 'vrscreenshotv8'
          publishLocation: 'Container'

      # - bash: cd packages/screenshotdiff && yarn build
      #   displayName: 'Build'

      - bash: node node_modules/vrscreenshotdiff/lib/index.js release --clientType "fluentuiv8" --buildId $(Build.BuildId)
        displayName: 'Run Screenshotdiff update baseline'
        env:
          API_URL: $(System.CollectionUri)
          API_TOKEN: $(TEST_PAT)
          API_REPOSITORY: $(Build.Repository.Name)
          API_PROJECT: $(System.TeamProject)
          GITHUB_API_TOKEN: $(GITHUB_TEST_PAT)
          STORAGE_ACCOUNT_FLUENTUI: $(STORAGE-ACCOUNT-FLUENTUI)
          STORAGE_KEY_FLUENTUI: $(STORAGE-KEY-BLOB-FLUENTUI)
          BLOB_CONNECTION_STRING: $(BLOB-CONNECTION-STRING)
          VR_APPROVAL_CLIENT_SECRET: $(VR-APPROVAL-CLIENT-SECRET)
